# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'yaml'

current_dir = File.dirname(File.expand_path('../../',__FILE__))
configs = YAML.load_file("#{current_dir}/config.yml")
vagrant_config = configs['configs']

$serviceScript = <<-SCRIPT
kubectl create configmap base-dev-map --from-literal=KAFKA_ZOOKEEPER_CONNECT=#{vagrant_config['base-ip']}.31:2181 --from-literal=KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://#{vagrant_config['base-ip']}.31:9092
SCRIPT

Vagrant.configure("2") do |config|
  config.vm.define "base-dev" do |machine|
    machine.vm.provider 'virtualbox' do |vb|
      # Customize the amount of memory on the VM:
      vb.memory = '2048'
    end
    machine.vm.box = 'ubuntu/xenial64'
    machine.vm.hostname = 'base-dev'
    machine.vm.network 'private_network', ip: "#{vagrant_config['base-ip']}.31"

    machine.vm.provision "chef_solo" do |chef|
      chef.add_recipe "k8s"
      chef.cookbooks_path = ["cookbooks"]
    end

    #create configMap - Run Once
    machine.vm.provision "shell", inline: $serviceScript
    machine.vm.provision "shell" do |s|
      s.inline = "kubectl taint node base-dev node-role.kubernetes.io/master-"
    end

    # Create the Kafka deployments
    if vagrant_config['load']['base-dev']['services']['kafka']
      #Apply the deployments - Ruh always
      machine.vm.provision "shell", run: "always" do |s|
        s.inline = "kubectl apply -f /vagrant/environment/base-dev/services/kafka.yml"
      end
    end

    # Create the Mongo deployments
    if vagrant_config['load']['base-dev']['services']['mongo']
      machine.vm.provision "shell", inline: <<-SHELL
        iptables -A INPUT -p tcp --dport 27017 -j ACCEPT
      SHELL
      #Apply the deployments - Ruh always
      machine.vm.provision "shell", run: "always" do |s|
        s.inline = "kubectl apply -f /vagrant/environment/base-dev/services/mongo.yml"
      end
    end

    # Create the PosgreSQL deployments
    if vagrant_config['load']['base-dev']['services']['postgres']
      #Apply the deployments - Ruh always
      machine.vm.provision "shell", run: "always" do |s|
        s.inline = "kubectl apply -f /vagrant/environment/base-dev/services/postgresql.yml"
      end
    end

    # Create the Redis deployments
    if vagrant_config['load']['base-dev']['services']['redis']
      #Apply the deployments - Ruh always
      machine.vm.provision "shell", run: "always" do |s|
        s.inline = "kubectl apply -f /vagrant/environment/base-dev/services/redis.yml"
      end
    end

    # Create the MySQL deployments
    if vagrant_config['load']['base-dev']['services']['mysql']
      #Apply the deployments - Ruh always
      machine.vm.provision "shell", run: "always" do |s|
        s.inline = "kubectl apply -f /vagrant/environment/base-dev/services/mysql-svc.yml"
      end
    end

    # Create the Minio deployments
    if vagrant_config['load']['base-dev']['services']['minio']
      #Apply the deployments - Ruh always
      machine.vm.provision "shell", run: "always" do |s|
        s.inline = "kubectl apply -f /vagrant/environment/base-dev/services/minio.yml"
      end
    end


  end

end
